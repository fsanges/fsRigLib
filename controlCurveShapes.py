'''
Copyright 2013
Author: Felipe Sanges

About: Personal library of curve shapes

Usage Example:
#Create:
ctrl = ccCreate.cube()
ctrl = circle3D()
ctrl = circleCompass()
ctrl = circleX()
ctrl = circleXPins()
ctrl = locator()w
ctrl = cuveBevel()
ctrl = squareCross()
ctrl = sphere()
'''


import maya.cmds as mc
import maya.mel as mel



def pin(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='pin'):
    points = [[0.0, 0.0, 0.0], [0.0, 3.0, 0.0], [-0.5, 4.0, -0.5], [-0.5, 4.0, 0.0], [-0.5, 4.0, 0.5], [0.0, 3.0, 0.0], [0.5, 4.0, 0.5],[0.5, 4.0, -0.5], [0.0, 3.0, 0.0], [0.5, 4.0, -0.5], [0.0, 4.0, -0.5], [0.0, 4.0, 0.5], [-0.5, 4.0, 0.5], [0.5, 4.0, 0.5], [0.5, 4.0, 0.0],[-0.5, 4.0, 0.0], [-0.5, 4.0, -0.5], [0.0, 4.0, -0.5]]
    ctrl = mc.curve(p=points, d=1, name=name)
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def sphere(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='sphere'):
    ctrl = mel.eval('curve -d 1 -p 0 0 1 -p 0 0.5 0.866025 -p 0 0.866025 0.5 -p 0 1 0 -p 0 0.866025 -0.5 -p 0 0.5 -0.866025 -p 0 0 -1 -p 0 -0.5 -0.866025 -p 0 -0.866025 -0.5 -p 0 -1 0 -p 0 -0.866025 0.5 -p 0 -0.5 0.866025 -p 0 0 1 -p 0.707107 0 0.707107 -p 1 0 0 -p 0.707107 0 -0.707107 -p 0 0 -1 -p -0.707107 0 -0.707107 -p -1 0 0 -p -0.866025 0.5 0 -p -0.5 0.866025 0 -p 0 1 0 -p 0.5 0.866025 0 -p 0.866025 0.5 0 -p 1 0 0 -p 0.866025 -0.5 0 -p 0.5 -0.866025 0 -p 0 -1 0 -p -0.5 -0.866025 0 -p -0.866025 -0.5 0 -p -1 0 0 -p -0.707107 0 0.707107 -p 0 0 1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def squareCrossDouble(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='squareCrossDouble'):
    ctrl = mel.eval('curve -d 1 -p 0.02 0.5 0.5 -p 0.02 0.5 -0.5 -p 0.02 -0.5 -0.5 -p 0.02 -0.5 0.5 -p 0.02 0.5 0.5 -p -0.02 0.5 0.5 -p -0.02 0.5 0 -p 0.02 0.5 0 -p -0.02 0.5 0 -p -0.02 0.5 -0.5 -p 0.02 0.5 -0.5 -p -0.02 0.5 -0.5 -p -0.02 0 -0.5 -p 0.02 0 -0.5 -p -0.02 0 -0.5 -p -0.02 -0.5 -0.5 -p 0.02 -0.5 -0.5 -p -0.02 -0.5 -0.5 -p -0.02 -0.5 0 -p 0.02 -0.5 0 -p -0.02 -0.5 0 -p -0.02 -0.5 0.5 -p 0.02 -0.5 0.5 -p -0.02 -0.5 0.5 -p -0.02 0 0.5 -p 0.02 0 0.5 -p -0.02 0 0.5 -p -0.02 0.5 0.5 -p 0.02 0.5 0.5 -p -0.02 0.5 0.5 -p -0.02 0.5 0 -p 0 0.5 0 -p 0 0 0 -p 0 -0.5 0 -p 0 0 0 -p 0 0 0.5 -p 0 0 0 -p 0 0 -0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def squareCross(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='squareCross'):
    ctrl = mel.eval('curve -d 1 -p 0 -0.5 0 -p 0 -0.5 0.5 -p 0 0 0.5 -p 0 0 0 -p 0 -0.5 0 -p 0 -0.5 -0.5 -p 0 0 -0.5 -p 0 0 0 -p 0 0.5 0 -p 0 0.5 -0.5 -p 0 0 -0.5 -p 0 0 0.5 -p 0 0.5 0.5 -p 0 0.5 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def doubleNail(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='doubleNail'):
    ctrl = mel.eval('curve -d 1 -p 1 0.0533082 0 -p 1 0.0506991 -0.0164731 -p 1 0.0431272 -0.0313338 -p 1 0.0313338 -0.0431272 -p 1 0.0164731 -0.0506991 -p 1 0 -0.0533082 -p 1 0 0 -p 1 0 -0.0533082 -p 1 -0.0164731 -0.0506991 -p 1 -0.0313338 -0.0431272 -p 1 -0.0431272 -0.0313338 -p 1 -0.0506991 -0.0164731 -p 1 -0.0533082 0 -p 1 -0.0506991 0.0164731 -p 1 -0.0431272 0.0313338 -p 1 -0.0313338 0.0431272 -p 1 -0.0164731 0.0506991 -p 1 -1.58871e-09 0.0533082 -p 1 0 0 -p 1 -1.58871e-09 0.0533082 -p 1 0.0164731 0.0506991 -p 1 0.0313338 0.0431272 -p 1 0.0431272 0.0313338 -p 1 0.0506991 0.0164731 -p 1 0.0533082 0 -p 1 -0.0533082 0 -p 1 0 0 -p -1 0 0 -p -1 0.0533082 0 -p -1 0.0506991 -0.0164731 -p -1 0.0431272 -0.0313338 -p -1 0.0313338 -0.0431272 -p -1 0.0164731 -0.0506991 -p -1 0 -0.0533082 -p -1 0 0 -p -1 0 -0.0533082 -p -1 -0.0164731 -0.0506991 -p -1 -0.0313338 -0.0431272 -p -1 -0.0431272 -0.0313338 -p -1 -0.0506991 -0.0164731 -p -1 -0.0533082 0 -p -1 0 0 -p -1 -0.0533082 0 -p -1 -0.0506991 0.0164731 -p -1 -0.0431272 0.0313338 -p -1 -0.0313338 0.0431272 -p -1 -0.0164731 0.0506991 -p -1 -1.58871e-09 0.0533082 -p -1 0 0 -p -1 -1.58871e-09 0.0533082 -p -1 0.0164731 0.0506991 -p -1 0.0313338 0.0431272 -p -1 0.0431272 0.0313338 -p -1 0.0506991 0.0164731 -p -1 0.0533082 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def belt(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 3 -p 1 -0.0270125 0.7262 -p 1 -0.0218525 0.74208 -p 1 -0.0083475 0.75189 -p 1 0.0083475 0.75189 -p 1 0.0218525 0.74208 -p 1 0.0270125 0.7262 -p 1 0.0270125 0.030885 -p 1 0.0270125 -0.75189 -p 0 0.0270125 -0.75189 -p -1 0.0270125 -0.75189 -p -1 0.0270125 0.030885 -p -1 0.0270125 0.7262 -p -1 0.0270125 0.7262 -p -1 0.0270125 0.7262 -p -1 0.0270125 0.7262 -p -1 0.0218525 0.74208 -p -1 0.0083475 0.75189 -p -1 -0.0083475 0.75189 -p -1 -0.0218525 0.74208 -p -1 -0.0270125 0.7262 -p -1 -0.0270125 0.7262 -p -1 -0.0270125 0.7262 -p -1 -0.0270125 0.030885 -p -1 -0.0270125 -0.75189 -p 0 -0.0270125 -0.75189 -p 1 -0.0270125 -0.75189 -p 1 -0.0270125 0.030885 -p 1 -0.0270125 0.7262 -p 1 -0.0270125 0.7262 -p 1 -0.0270125 0.7262 -p 1 -0.0270125 0.7262 -k 0 -k 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 28 -k 28 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def circle3D(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p 8.32645e-09 0.05 0.880094 -p 0.195839 0.05 0.858028 -p 0.381858 0.05 0.792937 -p 0.54873 0.05 0.688085 -p 0.688085 0.05 0.54873 -p 0.792937 0.05 0.381858 -p 0.858028 0.05 0.195839 -p 0.880094 0.05 1.42939e-08 -p 0.880094 -0.05 1.42939e-08 -p 0.880094 0.05 1.42939e-08 -p 0.858028 0.05 -0.195839 -p 0.792937 0.05 -0.381858 -p 0.688085 0.05 -0.548729 -p 0.548729 0.05 -0.688085 -p 0.381858 0.05 -0.792937 -p 0.195839 0.05 -0.858028 -p 6.07841e-08 0.05 -0.880094 -p 6.07841e-08 -0.05 -0.880094 -p 6.07841e-08 0.05 -0.880094 -p -0.195839 0.05 -0.858028 -p -0.381858 0.05 -0.792937 -p -0.548729 0.05 -0.688085 -p -0.688085 0.05 -0.548729 -p -0.792937 0.05 -0.381858 -p -0.858028 0.05 -0.195839 -p -0.880094 0.05 -2.50493e-08 -p -0.880094 -0.05 -1.84921e-08 -p -0.880094 0.05 -2.50493e-08 -p -0.858028 0.05 0.195839 -p -0.792937 0.05 0.381858 -p -0.688085 0.05 0.548729 -p -0.548729 0.05 0.688085 -p -0.381858 0.05 0.792937 -p -0.195839 0.05 0.858028 -p 8.32645e-09 0.05 0.880094 -p 8.32645e-09 -0.05 0.880094 -p -1.49012e-08 -0.05 1 -p 8.32645e-09 -0.05 0.880094 -p -0.195839 -0.05 0.858028 -p -0.381858 -0.05 0.792937 -p -0.548729 -0.05 0.688085 -p -0.688085 -0.05 0.548729 -p -0.792937 -0.05 0.381858 -p -0.858028 -0.05 0.195839 -p -0.880094 -0.05 -1.84921e-08 -p -0.858028 -0.05 -0.195839 -p -0.792937 -0.05 -0.381858 -p -0.688085 -0.05 -0.548729 -p -0.548729 -0.05 -0.688085 -p -0.381858 -0.05 -0.792937 -p -0.195839 -0.05 -0.858028 -p 6.07841e-08 -0.05 -0.880094 -p 0.195839 -0.05 -0.858028 -p 0.381858 -0.05 -0.792937 -p 0.548729 -0.05 -0.688085 -p 0.688085 -0.05 -0.548729 -p 0.792937 -0.05 -0.381858 -p 0.858028 -0.05 -0.195839 -p 0.880094 -0.05 1.42939e-08 -p 0.858028 -0.05 0.195839 -p 0.792937 -0.05 0.381858 -p 0.688085 -0.05 0.54873 -p 0.54873 -0.05 0.688085 -p 0.381858 -0.05 0.792937 -p 0.195839 -0.05 0.858028 -p 8.32645e-09 -0.05 0.880094 -p -1.49012e-08 -0.05 1 -p -2.98023e-08 0.05 1 -p 8.32645e-09 0.05 0.880094 -p -2.98023e-08 0.05 1 -p 0.222521 0.05 0.974928 -p 0.433884 0.05 0.900969 -p 0.62349 0.05 0.781831 -p 0.781831 0.05 0.62349 -p 0.900969 0.05 0.433884 -p 0.974928 0.05 0.222521 -p 1 0.05 5.96046e-08 -p 0.974928 0.05 -0.222521 -p 0.900968 0.05 -0.433884 -p 0.781831 0.05 -0.62349 -p 0.62349 0.05 -0.781831 -p 0.433884 0.05 -0.900968 -p 0.222521 0.05 -0.974927 -p 4.47035e-08 0.05 -1 -p 6.07841e-08 0.05 -0.880094 -p 6.07841e-08 -0.05 -0.880094 -p 4.47035e-08 -0.05 -1 -p 4.47035e-08 0.05 -1 -p -0.222521 0.05 -0.974928 -p -0.433884 0.05 -0.900968 -p -0.62349 0.05 -0.781831 -p -0.781831 0.05 -0.62349 -p -0.900968 0.05 -0.433884 -p -0.974928 0.05 -0.222521 -p -1 0.05 -1.49012e-08 -p -0.880094 0.05 -2.50493e-08 -p -0.880094 -0.05 -1.84921e-08 -p -1 -0.05 -4.47035e-08 -p -1 0.05 -1.49012e-08 -p -0.974928 0.05 0.222521 -p -0.900969 0.05 0.433884 -p -0.781831 0.05 0.62349 -p -0.62349 0.05 0.781831 -p -0.433884 0.05 0.900969 -p -0.222521 0.05 0.974928 -p -2.98023e-08 0.05 1 -p -1.49012e-08 -0.05 1 -p 0.222521 -0.05 0.974928 -p 0.433884 -0.05 0.900969 -p 0.62349 -0.05 0.781831 -p 0.781831 -0.05 0.62349 -p 0.900969 -0.05 0.433884 -p 0.974928 -0.05 0.222521 -p 1 -0.05 0 -p 1 0.05 5.96046e-08 -p 0.880094 0.05 1.42939e-08 -p 0.880094 -0.05 1.42939e-08 -p 1 -0.05 0 -p 0.974928 -0.05 -0.222521 -p 0.900968 -0.05 -0.433884 -p 0.781831 -0.05 -0.62349 -p 0.62349 -0.05 -0.781831 -p 0.433884 -0.05 -0.900968 -p 0.222521 -0.05 -0.974927 -p 4.47035e-08 -0.05 -1 -p -0.222521 -0.05 -0.974928 -p -0.433884 -0.05 -0.900968 -p -0.62349 -0.05 -0.781831 -p -0.781831 -0.05 -0.62349 -p -0.900968 -0.05 -0.433884 -p -0.974928 -0.05 -0.222521 -p -1 -0.05 -4.47035e-08 -p -0.974928 -0.05 0.222521 -p -0.900969 -0.05 0.433884 -p -0.781831 -0.05 0.62349 -p -0.62349 -0.05 0.781831 -p -0.433884 -0.05 0.900969 -p -0.222521 -0.05 0.974928 -p -1.49012e-08 -0.05 1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 -k 70 -k 71 -k 72 -k 73 -k 74 -k 75 -k 76 -k 77 -k 78 -k 79 -k 80 -k 81 -k 82 -k 83 -k 84 -k 85 -k 86 -k 87 -k 88 -k 89 -k 90 -k 91 -k 92 -k 93 -k 94 -k 95 -k 96 -k 97 -k 98 -k 99 -k 100 -k 101 -k 102 -k 103 -k 104 -k 105 -k 106 -k 107 -k 108 -k 109 -k 110 -k 111 -k 112 -k 113 -k 114 -k 115 -k 116 -k 117 -k 118 -k 119 -k 120 -k 121 -k 122 -k 123 -k 124 -k 125 -k 126 -k 127 -k 128 -k 129 -k 130 -k 131 -k 132 -k 133 -k 134 -k 135 -k 136 -k 137 -k 138 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def circleCompass(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p -1.312795 0.00 -6.61723e-08 -p -0.880094 0.00 -2.50493e-08 -p -0.858028 0.00 -0.195839 -p -0.792937 0.00 -0.381858 -p -0.688085 0.00 -0.548729 -p -0.548729 0.00 -0.688085 -p -0.381858 0.00 -0.792937 -p -0.195839 0.00 -0.858028 -p 6.07841e-08 0.00 -0.880094 -p 2.75438e-09 0.00 -1.312795 -p 6.07841e-08 0.00 -0.880094 -p 0.195839 0.00 -0.858028 -p 0.381858 0.00 -0.792937 -p 0.548729 0.00 -0.688085 -p 0.688085 0.00 -0.548729 -p 0.792937 0.00 -0.381858 -p 0.858028 0.00 -0.195839 -p 0.880094 0.00 1.42939e-08 -p 1.312795 0.00 3.16386e-08 -p 0.880094 0.00 1.42939e-08 -p 0.858028 0.00 0.195839 -p 0.792937 0.00 0.381858 -p 0.688085 0.00 0.54873 -p 0.54873 0.00 0.688085 -p 0.381858 0.00 0.792937 -p 0.195839 0.00 0.858028 -p 8.32645e-09 0.00 0.880094 -p -9.50565e-08 0.00 1.312795 -p 8.32645e-09 0.00 0.880094 -p -0.195839 0.00 0.858028 -p -0.381858 0.00 0.792937 -p -0.548729 0.00 0.688085 -p -0.688085 0.00 0.548729 -p -0.792937 0.00 0.381858 -p -0.858028 0.00 0.195839 -p -0.880094 0.00 -2.50493e-08 -p -1.312795 0.00 -6.61723e-08 -p -0.974928 0.00 0.222521 -p -0.900969 0.00 0.433884 -p -0.781831 0.00 0.62349 -p -0.62349 0.00 0.781831 -p -0.433884 0.00 0.900969 -p -0.222521 0.00 0.974928 -p -9.50565e-08 0.00 1.312795 -p 0.222521 0.00 0.974928 -p 0.433884 0.00 0.900969 -p 0.62349 0.00 0.781831 -p 0.781831 0.00 0.62349 -p 0.900969 0.00 0.433884 -p 0.974928 0.00 0.222521 -p 1.312795 0.00 3.16386e-08 -p 0.974928 0.00 -0.222521 -p 0.900968 0.00 -0.433884 -p 0.781831 0.00 -0.62349 -p 0.62349 0.00 -0.781831 -p 0.433884 0.00 -0.900968 -p 0.222521 0.00 -0.974927 -p 2.75438e-09 0.00 -1.312795 -p -0.222521 0.00 -0.974928 -p -0.433884 0.00 -0.900968 -p -0.62349 0.00 -0.781831 -p -0.781831 0.00 -0.62349 -p -0.900968 0.00 -0.433884 -p -0.974928 0.00 -0.222521 -p -1.312795 0.00 -6.61723e-08 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def circleX(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p 4.47035e-08 0 -1 -p -0.222521 0 -0.974928 -p -0.433884 0 -0.900968 -p -0.62349 0 -0.781831 -p -0.781831 0 -0.62349 -p -0.900968 0 -0.433884 -p -0.974928 0 -0.222521 -p -1 0 -4.47035e-08 -p 1 0 0 -p 0.974928 0 -0.222521 -p 0.900968 0 -0.433884 -p 0.781831 0 -0.62349 -p 0.62349 0 -0.781831 -p 0.433884 0 -0.900968 -p 0.222521 0 -0.974927 -p 4.47035e-08 0 -1 -p -1.49012e-08 0 1 -p 0 0 0 -p 1 0 0 -p 0.974928 0 0.222521 -p 0.900969 0 0.433884 -p 0.781831 0 0.62349 -p 0.62349 0 0.781831 -p 0.433884 0 0.900969 -p 0.222521 0 0.974928 -p -1.49012e-08 0 1 -p -0.222521 0 0.974928 -p -0.433884 0 0.900969 -p -0.62349 0 0.781831 -p -0.781831 0 0.62349 -p -0.900969 0 0.433884 -p -0.974928 0 0.222521 -p -1 0 -4.47035e-08 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def circleXPins(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p 0 0 0 -p 0.776071 0 4.47035e-08 -p 0.974928 0 -0.222521 -p 1 0 0 -p 0.974928 0 0.222521 -p 0.776071 0 4.47035e-08 -p -0.776071 0 -4.47035e-08 -p -0.974928 0 0.222521 -p -1 0 -4.47035e-08 -p -0.974928 0 -0.222521 -p -0.776071 0 -4.47035e-08 -p 0 0 0 -p -4.47035e-08 0 0.776071 -p 0.222521 0 0.974928 -p -1.49012e-08 0 1 -p -0.222521 0 0.974928 -p -4.47035e-08 0 0.776071 -p 4.47035e-08 0 -0.776071 -p 0.222521 0 -0.974927 -p 4.47035e-08 0 -1 -p -0.222521 0 -0.974928 -p 4.47035e-08 0 -0.776071 -p -0.222521 0 -0.974928 -p -0.433884 0 -0.900968 -p -0.62349 0 -0.781831 -p -0.781831 0 -0.62349 -p -0.900968 0 -0.433884 -p -0.974928 0 -0.222521 -p -1 0 -4.47035e-08 -p -0.974928 0 0.222521 -p -0.900969 0 0.433884 -p -0.781831 0 0.62349 -p -0.62349 0 0.781831 -p -0.433884 0 0.900969 -p -0.222521 0 0.974928 -p -1.49012e-08 0 1 -p 0.222521 0 0.974928 -p 0.433884 0 0.900969 -p 0.62349 0 0.781831 -p 0.781831 0 0.62349 -p 0.900969 0 0.433884 -p 0.974928 0 0.222521 -p 1 0 0 -p 0.974928 0 -0.222521 -p 0.900968 0 -0.433884 -p 0.781831 0 -0.62349 -p 0.62349 0 -0.781831 -p 0.433884 0 -0.900968 -p 0.222521 0 -0.974927 -p 4.47035e-08 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def arrowCircle(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p -0.251045 0 -1.015808 -p -0.761834 0 -0.979696 -p -0.486547 0 -0.930468 -p -0.570736 0 -0.886448 -p -0.72786 0 -0.774834 -p -0.909301 0 -0.550655 -p -1.023899 0 -0.285854 -p -1.063053 0 9.80765e-009 -p -1.023899 0 0.285854 -p -0.909301 0 0.550655 -p -0.72786 0 0.774834 -p -0.570736 0 0.886448 -p -0.486547 0 0.930468 -p -0.761834 0 0.979696 -p -0.251045 0 1.015808 -p -0.498915 0 0.567734 -p -0.440202 0 0.841857 -p -0.516355 0 0.802034 -p -0.658578 0 0.701014 -p -0.822676 0 0.498232 -p -0.926399 0 0.258619 -p -0.961797 0 8.87346e-009 -p -0.926399 0 -0.258619 -p -0.822676 0 -0.498232 -p -0.658578 0 -0.701014 -p -0.516355 0 -0.802034 -p -0.440202 0 -0.841857 -p -0.498915 0 -0.567734 -p -0.251045 0 -1.015808 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def circle(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 0 -n "' +name+ '";')[0]
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def square(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p 1 0 -1 -p -1 0 -1 -p -1 0 1 -p 1 0 1 -p 1 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def locator(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p 0 1.12 -2.68221e-09 -p -0.03 1 -0.0519615 -p 0.06 1 0 -p 0 1.12 -2.68221e-09 -p -0.03 1 0.0519615 -p -0.03 1 -0.0519615 -p 0 1 0 -p -0.03 1 0.0519615 -p 0.06 1 0 -p 0 1 0 -p 0 -1 0 -p -0.03 -1 -0.0519615 -p 0 -1.12 2.68221e-09 -p 0.06 -1 0 -p -0.03 -1 -0.0519615 -p -0.03 -1 0.0519615 -p 0 -1.12 2.68221e-09 -p 0.06 -1 0 -p 0 -1 0 -p -0.03 -1 0.0519615 -p 0.06 -1 0 -p 0 -1 0 -p 0 0 0 -p -1 0 0 -p -1 0.0519615 -0.03 -p -1.12 2.68221e-09 0 -p -1 0 0.06 -p -1 -0.0519615 -0.03 -p -1 0.0519615 -0.03 -p -1 0 0.06 -p -1.12 2.68221e-09 0 -p -1 -0.0519615 -0.03 -p -1 0 0 -p -1 0 0.06 -p -1 0 0 -p 1 0 0 -p 1 0.0519615 0.03 -p 1.12 2.68221e-09 0 -p 1 0 -0.06 -p 1 -0.0519615 0.03 -p 1.12 2.68221e-09 0 -p 1 -0.0519615 0.03 -p 1 0.0519615 0.03 -p 1 0 -0.06 -p 1 0 0 -p 1 -0.0519615 0.03 -p 1 0 0 -p 0 0 0 -p 0 0 -1 -p 0.06 0 -1 -p 0 -2.68221e-09 -1.12 -p -0.03 0.0519615 -1 -p 0.06 0 -1 -p -0.03 -0.0519615 -1 -p 0 -2.68221e-09 -1.12 -p -0.03 0.0519615 -1 -p -0.03 -0.0519615 -1 -p 0 0 -1 -p -0.03 0.0519615 -1 -p 0 0 -1 -p 0 0 1 -p -0.03 0.0519615 1 -p -0.03 -0.0519615 1 -p 0 2.68221e-09 1.12 -p -0.03 0.0519615 1 -p 0.06 0 1 -p 0 0 1 -p -0.03 -0.0519615 1 -p 0.06 0 1 -p 0 2.68221e-09 1.12 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 -n "' +name+ '"')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def cross(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p -1 0 -1 -p -1 0 -3 -p 1 0 -3 -p 1 0 -1 -p 3 0 -1 -p 3 0 1 -p 1 0 1 -p 1 0 3 -p -1 0 3 -p -1 0 1 -p -3 0 1 -p -3 0 -1 -p -1 0 -1 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12  -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def arrow180(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p -0.251045 0 -1.015808 -p -0.761834 0 -0.979696 -p -0.486547 0 -0.930468 -p -0.570736 0 -0.886448 -p -0.72786 0 -0.774834 -p -0.909301 0 -0.550655 -p -1.023899 0 -0.285854 -p -1.063053 0 9.80765e-009 -p -1.023899 0 0.285854 -p -0.909301 0 0.550655 -p -0.72786 0 0.774834 -p -0.570736 0 0.886448 -p -0.486547 0 0.930468 -p -0.761834 0 0.979696 -p -0.251045 0 1.015808 -p -0.498915 0 0.567734 -p -0.440202 0 0.841857 -p -0.516355 0 0.802034 -p -0.658578 0 0.701014 -p -0.822676 0 0.498232 -p -0.926399 0 0.258619 -p -0.961797 0 8.87346e-009 -p -0.926399 0 -0.258619 -p -0.822676 0 -0.498232 -p -0.658578 0 -0.701014 -p -0.516355 0 -0.802034 -p -0.440202 0 -0.841857 -p -0.498915 0 -0.567734 -p -0.251045 0 -1.015808 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def triangle(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p -1.03923 0 0.6 -p 1.03923 0 0.6 -p 0 0 -1.2 -p -1.03923 0 0.6 -k 0 -k 1 -k 2 -k 3 -n "' +name+ '"')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def angle(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p -1 0 -3 -p 1 0 -3 -p 1 0 1 -p -3 0 1 -p -3 0 -1 -p -1 0 -1 -p -1 0 -3 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def cube(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p -0.5 0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 -p -0.5 0.5 0.5 -p -0.5 0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 -0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -p 0.5 -0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p -0.5 -0.5 0.5 -p -0.5 0.5 0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -n "' +name+ '";' )
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def crossArrow(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p 0 0 -1.5 -p 0.5 0 -1.25 -p 0.25 0 -1.25 -p 0.25 0 -0.25 -p 1.25 0 -0.25 -p 1.25 0 -0.5 -p 1.5 0 0 -p 1.25 0 0.5 -p 1.25 0 0.25 -p 0.25 0 0.25 -p 0.25 0 1.25 -p 0.5 0 1.25 -p 0 0 1.5 -p -0.5 0 1.25 -p -0.25 0 1.25 -p -0.25 0 0.25 -p -1.25 0 0.25 -p -1.25 0 0.5 -p -1.5 0 0 -p -1.25 0 -0.5 -p -1.25 0 -0.25 -p -0.25 0 -0.25 -p -0.25 0 -1.25 -p -0.5 0 -1.25 -p 0 0 -1.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def dir1Arrow(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p 0 0 -1.32 -p -0.99 0 0 -p -0.33 0 0 -p -0.33 0 0.99 -p 0.33 0 0.99 -p 0.33 0 0 -p 0.99 0 0 -p 0 0 -1.32 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -n "' +name+ '" ;')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def dir2Arrow(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval('curve -d 1 -p 0 0 -2.31 -p -0.99 0 -0.99 -p -0.33 0 -0.99 -p -0.33 0 0.99 -p -0.99 0 0.99 -p 0 0 2.31 -p 0.99 0 0.99 -p 0.33 0 0.99 -p 0.33 0 -0.99 -p 0.99 0 -0.99 -p 0 0 -2.31 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def trident(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval ('curve -d 1 -p -0.961797 0 8.87346e-09 -p -0.926399 0 0.258619 -p -0.822676 0 0.498232 -p -0.658578 0 0.701014 -p -0.516355 0 0.802034 -p -0.440202 0 0.841857 -p -0.498915 0 0.567734 -p -0.251045 0 1.015808 -p -0.761834 0 0.979696 -p -0.486547 0 0.930468 -p -0.570736 0 0.886448 -p -0.72786 0 0.774834 -p -0.909301 0 0.550655 -p -1.023899 0 0.285854 -p -1.053863 0 0.0649027 -p -1.875348 0 0.0649027 -p -1.761901 0 0.291191 -p -2.150155 0 0 -p -1.761901 0 -0.291191 -p -1.875348 0 -0.0649027 -p -1.053863 0 -0.0649027 -p -1.023899 0 -0.285854 -p -0.909301 0 -0.550655 -p -0.72786 0 -0.774834 -p -0.570736 0 -0.886448 -p -0.486547 0 -0.930468 -p -0.761834 0 -0.979696 -p -0.251045 0 -1.015808 -p -0.498915 0 -0.567734 -p -0.440202 0 -0.841857 -p -0.516355 0 -0.802034 -p -0.658578 0 -0.701014 -p -0.822676 0 -0.498232 -p -0.926399 0 -0.258619 -p -0.961797 0 8.87346e-09 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def pyramid(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval ('curve -d 1 -p 0.57735 -0.408248 0 -p -0.288675 -0.408248 -0.5 -p 0 0.408248 0 -p 0.57735 -0.408248 0 -p -0.288675 -0.408248 0.5 -p 0 0.408248 0 -p -0.288675 -0.408248 -0.5 -p -0.288675 -0.408248 0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -n "' +name+ '" ;')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def prism(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval ('curve -d 1 -p 0 -0.360988 0 -p 0.398795 0 -0.398795 -p 0.398795 0 0.398795 -p -0.398795 0 0.398795 -p -0.398795 0 -0.398795 -p 0.398795 0 -0.398795 -p 0 0.360988 0 -p -0.398795 0 0.398795 -p 0 -0.360988 0 -p 0.398795 0 0.398795 -p 0 0.360988 0 -p -0.398795 0 -0.398795 -p 0 -0.360988 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -n "' +name+ '" ;')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def openCube(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval ('curve -d 1 -p -0.5 0.5 0.5 -p -0.5 0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 0.5 0.5 -p 0.5 -0.5 0.5 -p 0.5 -0.5 -0.5 -p 0.5 0.5 -0.5 -p 0.5 -0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 0.5 -0.5 -p -0.5 -0.5 -0.5 -p -0.5 -0.5 0.5 -p -0.5 0.5 0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -n "' +name+ '" ;')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def arrowSphere(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='controlCurve'):
    ctrl = mel.eval ('curve -d 1 -p 0 0.35 -1.001567 -p -0.336638 0.677886 -0.751175 -p -0.0959835 0.677886 -0.751175 -p -0.0959835 0.850458 -0.500783 -p -0.0959835 0.954001 -0.0987656 -p -0.500783 0.850458 -0.0987656 -p -0.751175 0.677886 -0.0987656 -p -0.751175 0.677886 -0.336638 -p -1.001567 0.35 0 -p -0.751175 0.677886 0.336638 -p -0.751175 0.677886 0.0987656 -p -0.500783 0.850458 0.0987656 -p -0.0959835 0.954001 0.0987656 -p -0.0959835 0.850458 0.500783 -p -0.0959835 0.677886 0.751175 -p -0.336638 0.677886 0.751175 -p 0 0.35 1.001567 -p 0.336638 0.677886 0.751175 -p 0.0959835 0.677886 0.751175 -p 0.0959835 0.850458 0.500783 -p 0.0959835 0.954001 0.0987656 -p 0.500783 0.850458 0.0987656 -p 0.751175 0.677886 0.0987656 -p 0.751175 0.677886 0.336638 -p 1.001567 0.35 0 -p 0.751175 0.677886 -0.336638 -p 0.751175 0.677886 -0.0987656 -p 0.500783 0.850458 -0.0987656 -p 0.0959835 0.954001 -0.0987656 -p 0.0959835 0.850458 -0.500783 -p 0.0959835 0.677886 -0.751175 -p 0.336638 0.677886 -0.751175 -p 0 0.35 -1.001567 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def cubeBevel(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='cuveBevel'):
    ctrl = mel.eval ('curve -d 1 -p -0.455556 -0.455556 -0.455556 -p -0.433333 -0.433333 -0.5 -p 0.433333 -0.433333 -0.5 -p 0.455556 -0.455556 -0.455556 -p 0.433333 -0.5 -0.433333 -p -0.433333 -0.5 -0.433333 -p -0.433333 -0.5 0.433333 -p 0.433333 -0.5 0.433333 -p 0.433333 -0.5 -0.433333 -p 0.455556 -0.455556 -0.455556 -p 0.5 -0.433333 -0.433333 -p 0.5 0.433333 -0.433333 -p 0.5 0.433333 0.433333 -p 0.5 -0.433333 0.433333 -p 0.5 -0.433333 -0.433333 -p 0.455556 -0.455556 -0.455556 -p 0.433333 -0.433333 -0.5 -p 0.433333 0.433333 -0.5 -p -0.433333 0.433333 -0.5 -p -0.433333 -0.433333 -0.5 -p -0.455556 -0.455556 -0.455556 -p -0.433333 -0.5 -0.433333 -p -0.455556 -0.455556 -0.455556 -p -0.5 -0.433333 -0.433333 -p -0.5 -0.433333 0.433333 -p -0.5 0.433333 0.433333 -p -0.5 0.433333 -0.433333 -p -0.5 -0.433333 -0.433333 -p -0.5 0.433333 -0.433333 -p -0.455556 0.455556 -0.455556 -p -0.433333 0.433333 -0.5 -p -0.455556 0.455556 -0.455556 -p -0.433333 0.5 -0.433333 -p 0.433333 0.5 -0.433333 -p 0.433333 0.5 0.433333 -p -0.433333 0.5 0.433333 -p -0.433333 0.5 -0.433333 -p 0.433333 0.5 -0.433333 -p 0.455556 0.455556 -0.455556 -p 0.433333 0.433333 -0.5 -p 0.455556 0.455556 -0.455556 -p 0.5 0.433333 -0.433333 -p 0.455556 0.455556 -0.455556 -p 0.433333 0.5 -0.433333 -p 0.433333 0.5 0.433333 -p 0.455556 0.455556 0.455556 -p 0.5 0.433333 0.433333 -p 0.455556 0.455556 0.455556 -p 0.433333 0.433333 0.5 -p 0.433333 -0.433333 0.5 -p 0.455556 -0.455556 0.455556 -p 0.5 -0.433333 0.433333 -p 0.455556 -0.455556 0.455556 -p 0.433333 -0.5 0.433333 -p 0.455556 -0.455556 0.455556 -p 0.433333 -0.433333 0.5 -p -0.433333 -0.433333 0.5 -p -0.455556 -0.455556 0.455556 -p -0.433333 -0.5 0.433333 -p -0.455556 -0.455556 0.455556 -p -0.5 -0.433333 0.433333 -p -0.455556 -0.455556 0.455556 -p -0.433333 -0.433333 0.5 -p -0.433333 0.433333 0.5 -p -0.455556 0.455556 0.455556 -p -0.5 0.433333 0.433333 -p -0.455556 0.455556 0.455556 -p -0.433333 0.5 0.433333 -p -0.455556 0.455556 0.455556 -p -0.433333 0.433333 0.5 -p 0.433333 0.433333 0.5 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 48 -k 49 -k 50 -k 51 -k 52 -k 53 -k 54 -k 55 -k 56 -k 57 -k 58 -k 59 -k 60 -k 61 -k 62 -k 63 -k 64 -k 65 -k 66 -k 67 -k 68 -k 69 -k 70 -n "' +name+ '";')
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def square3D(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='square3D'):

    points = [[-1.5931700403370996e-14, -0.4589151321818673, -0.4589151321818673],
 [-1.049160758270773e-14, -0.44341100122265187, -0.4899219987773481],
 [1.074140776324839e-14, -0.44341100122265187, -0.4899219987773481],
 [1.609823385706477e-14, -0.4589151321818673, -0.4589151321818673],
 [1.074140776324839e-14, -0.4899219987773481, -0.44341100122265187],
 [-1.049160758270773e-14, -0.4899219987773481, -0.44341100122265187],
 [-1.049160758270773e-14, -0.4899219987773481, 0.44341100122265187],
 [1.074140776324839e-14, -0.4899219987773481, 0.44341100122265187],
 [1.074140776324839e-14, -0.4899219987773481, -0.44341100122265187],
 [1.609823385706477e-14, -0.4589151321818673, -0.4589151321818673],
 [0.027217060408329302, -0.44341100122265187, -0.44341100122265187],
 [0.027217060408329302, 0.44341100122265187, -0.44341100122265187],
 [0.027217060408329302, 0.44341100122265187, 0.44341100122265187],
 [0.027217060408329302, -0.44341100122265187, 0.44341100122265187],
 [0.027217060408329302, -0.44341100122265187, -0.44341100122265187],
 [1.609823385706477e-14, -0.4589151321818673, -0.4589151321818673],
 [1.074140776324839e-14, -0.44341100122265187, -0.4899219987773481],
 [1.074140776324839e-14, 0.44341100122265187, -0.4899219987773481],
 [-1.049160758270773e-14, 0.44341100122265187, -0.4899219987773481],
 [-1.049160758270773e-14, -0.44341100122265187, -0.4899219987773481],
 [-1.5931700403370996e-14, -0.4589151321818673, -0.4589151321818673],
 [-1.049160758270773e-14, -0.4899219987773481, -0.44341100122265187],
 [-1.5931700403370996e-14, -0.4589151321818673, -0.4589151321818673],
 [-0.027217060408329385, -0.44341100122265187, -0.44341100122265187],
 [-0.027217060408329385, -0.44341100122265187, 0.44341100122265187],
 [-0.027217060408329385, 0.44341100122265187, 0.44341100122265187],
 [-0.027217060408329385, 0.44341100122265187, -0.44341100122265187],
 [-0.027217060408329385, -0.44341100122265187, -0.44341100122265187],
 [-0.027217060408329385, 0.44341100122265187, -0.44341100122265187],
 [-1.5931700403370996e-14, 0.4589151321818673, -0.4589151321818673],
 [-1.049160758270773e-14, 0.44341100122265187, -0.4899219987773481],
 [-1.5931700403370996e-14, 0.4589151321818673, -0.4589151321818673],
 [-1.049160758270773e-14, 0.4899219987773481, -0.44341100122265187],
 [1.074140776324839e-14, 0.4899219987773481, -0.44341100122265187],
 [1.074140776324839e-14, 0.4899219987773481, 0.44341100122265187],
 [-1.049160758270773e-14, 0.4899219987773481, 0.44341100122265187],
 [-1.049160758270773e-14, 0.4899219987773481, -0.44341100122265187],
 [1.074140776324839e-14, 0.4899219987773481, -0.44341100122265187],
 [1.609823385706477e-14, 0.4589151321818673, -0.4589151321818673],
 [1.074140776324839e-14, 0.44341100122265187, -0.4899219987773481],
 [1.609823385706477e-14, 0.4589151321818673, -0.4589151321818673],
 [0.027217060408329302, 0.44341100122265187, -0.44341100122265187],
 [1.609823385706477e-14, 0.4589151321818673, -0.4589151321818673],
 [1.074140776324839e-14, 0.4899219987773481, -0.44341100122265187],
 [1.074140776324839e-14, 0.4899219987773481, 0.44341100122265187],
 [1.609823385706477e-14, 0.4589151321818673, 0.4589151321818673],
 [0.027217060408329302, 0.44341100122265187, 0.44341100122265187],
 [1.609823385706477e-14, 0.4589151321818673, 0.4589151321818673],
 [1.074140776324839e-14, 0.44341100122265187, 0.4899219987773481],
 [1.074140776324839e-14, -0.44341100122265187, 0.4899219987773481],
 [1.609823385706477e-14, -0.4589151321818673, 0.4589151321818673],
 [0.027217060408329302, -0.44341100122265187, 0.44341100122265187],
 [1.609823385706477e-14, -0.4589151321818673, 0.4589151321818673],
 [1.074140776324839e-14, -0.4899219987773481, 0.44341100122265187],
 [1.609823385706477e-14, -0.4589151321818673, 0.4589151321818673],
 [1.074140776324839e-14, -0.44341100122265187, 0.4899219987773481],
 [-1.049160758270773e-14, -0.44341100122265187, 0.4899219987773481],
 [-1.5931700403370996e-14, -0.4589151321818673, 0.4589151321818673],
 [-1.049160758270773e-14, -0.4899219987773481, 0.44341100122265187],
 [-1.5931700403370996e-14, -0.4589151321818673, 0.4589151321818673],
 [-0.027217060408329385, -0.44341100122265187, 0.44341100122265187],
 [-1.5931700403370996e-14, -0.4589151321818673, 0.4589151321818673],
 [-1.049160758270773e-14, -0.44341100122265187, 0.4899219987773481],
 [-1.049160758270773e-14, 0.44341100122265187, 0.4899219987773481],
 [-1.5931700403370996e-14, 0.4589151321818673, 0.4589151321818673],
 [-0.027217060408329385, 0.44341100122265187, 0.44341100122265187],
 [-1.5931700403370996e-14, 0.4589151321818673, 0.4589151321818673],
 [-1.049160758270773e-14, 0.4899219987773481, 0.44341100122265187],
 [-1.5931700403370996e-14, 0.4589151321818673, 0.4589151321818673],
 [-1.049160758270773e-14, 0.44341100122265187, 0.4899219987773481],
 [1.074140776324839e-14, 0.44341100122265187, 0.4899219987773481]]

    ctrl = mc.curve(p=points, d=1, name=name)
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl

def locatorCross(scale = (1, 1, 1), orientation = (0, 0, 0), offset = (0, 0, 0), color = 17, mirror=None, name='locatorCross'):

    points = [[3.032641500666399e-10, 0.22347475986546647, -0.0005406200327391884],
     [0.003873895295612548, 0.21452837796583143, -0.0027772155076479284],
     [1.0329685844147403e-10, 0.21452837796583143, 0.003932570917078296],
     [3.032641500666399e-10, 0.22347475986546647, -0.0005406200327391884],
     [-0.0038738950890188258, 0.21452837796583143, -0.0027772155076479284],
     [0.003873895295612548, 0.21452837796583143, -0.0027772155076479284],
     [1.0329685844147403e-10, 0.21452837796583143, -0.000540620032739187],
     [-0.0038738950890188258, 0.21452837796583143, -0.0027772155076479284],
     [1.0329685844147403e-10, 0.21452837796583143, 0.003932570917078296],
     [1.0329685844147403e-10, 0.21452837796583143, -0.000540620032739187],
     [1.0329686109092872e-10, 0.00369678228608928, 5.99563801384484e-17],
     [0.0020011334402004932, 0.00369678228608928, -0.0011553554094301706],
     [2.5849394142282115e-26, -4.85722573273506e-17, 6.049848122469115e-17],
     [1.0329686109092872e-10, 0.00369678228608928, 0.0023107108188605216],
     [0.0020011334402004932, 0.00369678228608928, -0.0011553554094301706],
     [-0.002001133233606771, 0.00369678228608928, -0.0011553554094301706],
     [2.5849394142282115e-26, -4.85722573273506e-17, 6.049848122469115e-17],
     [1.0329686109092872e-10, 0.00369678228608928, 0.0023107108188605216],
     [1.0329686109092872e-10, 0.00369678228608928, 5.99563801384484e-17],
     [-0.002001133233606771, 0.00369678228608928, -0.0011553554094301706],
     [1.0329686109092872e-10, 0.00369678228608928, 0.0023107108188605216],
     [1.0329686109092872e-10, 0.00369678228608928, 5.99563801384484e-17],
     [6.571407041923037e-11, 0.178179011115784, -3.3176586478056436e-16],
     [0.0005406201360361137, 0.17817901111578074, -0.03634936685005059],
     [0.002777215610944859, 0.18205290630809648, -0.03634936685005059],
     [0.0005406201360361137, 0.17817901131574806, -0.045295748749685574],
     [-0.003932570813781368, 0.17817901111578074, -0.03634936685005059],
     [0.002777215610944859, 0.17430511592346506, -0.03634936685005059],
     [0.002777215610944859, 0.18205290630809648, -0.03634936685005059],
     [-0.003932570813781368, 0.17817901111578074, -0.03634936685005059],
     [0.0005406201360361137, 0.17817901131574806, -0.045295748749685574],
     [0.002777215610944859, 0.17430511592346506, -0.03634936685005059],
     [0.0005406201360361137, 0.17817901111578074, -0.03634936685005059],
     [-0.003932570813781368, 0.17817901111578074, -0.03634936685005059],
     [0.0005406201360361137, 0.17817901111578074, -0.03634936685005059],
     [-0.0005406199294423972, 0.17817901111578074, 0.036349366850050746],
     [-0.0027772154043511363, 0.18205290630809648, 0.036349366850050746],
     [-0.0005406199294423972, 0.17817901131574806, 0.04529574874968571],
     [0.00393257102037509, 0.17817901111578074, 0.036349366850050746],
     [-0.0027772154043511363, 0.17430511592346506, 0.036349366850050746],
     [-0.0005406199294423972, 0.17817901131574806, 0.04529574874968571],
     [-0.0027772154043511363, 0.17430511592346506, 0.036349366850050746],
     [-0.0027772154043511363, 0.18205290630809648, 0.036349366850050746],
     [0.00393257102037509, 0.17817901111578074, 0.036349366850050746],
     [-0.0005406199294423972, 0.17817901111578074, 0.036349366850050746],
     [-0.0027772154043511363, 0.17430511592346506, 0.036349366850050746],
     [-0.0005406199294423972, 0.17817901111578074, 0.036349366850050746],
     [6.571407041923037e-11, 0.178179011115784, -3.3176586478056436e-16],
     [0.11045401350477006, 0.17817901111578405, -0.0005406200327428384],
     [0.11045401350477006, 0.17817901111578405, 0.003932570917074644],
     [0.11776065628575764, 0.17817901091581673, -0.0005406200327428384],
     [0.11045401350477006, 0.18205290630809967, -0.0027772155076516043],
     [0.11045401350477006, 0.17817901111578405, 0.003932570917074644],
     [0.11045401350477006, 0.17430511592346842, -0.002777215507651554],
     [0.11776065628575764, 0.17817901091581673, -0.0005406200327428384],
     [0.11045401350477006, 0.18205290630809967, -0.0027772155076516043],
     [0.11045401350477006, 0.17430511592346842, -0.002777215507651554],
     [0.11045401350477006, 0.17817901111578405, -0.0005406200327428384],
     [0.11045401350477006, 0.18205290630809967, -0.0027772155076516043],
     [0.11045401350477006, 0.17817901111578405, -0.0005406200327428384],
     [-0.11045401337334215, 0.17817901111578405, -0.0005406200327428384],
     [-0.11045401337334215, 0.18205290630809967, -0.0027772155076516043],
     [-0.11045401337334215, 0.17430511592346842, -0.002777215507651554],
     [-0.11776065615432954, 0.17817901131575137, -0.0005406200327428384],
     [-0.11045401337334215, 0.18205290630809967, -0.0027772155076516043],
     [-0.11045401337334215, 0.17817901111578405, 0.003932570917074644],
     [-0.11045401337334215, 0.17817901111578405, -0.0005406200327428384],
     [-0.11045401337334215, 0.17430511592346842, -0.002777215507651554],
     [-0.11045401337334215, 0.17817901111578405, 0.003932570917074644],
     [-0.11776065615432954, 0.17817901131575137, -0.0005406200327428384]]

    ctrl = mc.curve(p=points, d=1, name=name)
    setupCtrl(ctrl, scale, orientation, offset, color, mirror)
    return ctrl


def setupCtrl(ctrl, scale, orientation, offset, colorOverride, mirror):
    #Negative scale for mirror points
    xValue, yValue, zValue = 1, 1, 1

    #Mirror
    if mirror=='x':
        xValue = -1
    elif mirror == 'y':
        yValue = -1
    elif mirror == 'z':
        zValue = -1
    #else:
    #    mc.error('No axis provided!')

    #mc.xform(ctrl, s=(xValue, yValue, zValue))
    mc.makeIdentity (ctrl, a=1, t=1, r=1, s=1)

    #Offset, orient and scale
    mc.xform(ctrl, scale=scale, translation=offset, relative=False)

    #Reset pivot
    mc.move(0, 0, 0, ctrl + '.scalePivot', ctrl + '.rotatePivot')
    mc.xform(ctrl, ro=orientation, relative=False)

    #get shape
    shape = mc.listRelatives(ctrl, s=1)

    #Enable overrides
    for s in shape:
        mc.setAttr(s + '.overrideEnabled', True)
        mc.setAttr(s + '.overrideColor', colorOverride)
        shapeName = '%sShape'%ctrl
        mc.rename(s, shapeName)

    #Freeze transformations
    mc.makeIdentity (ctrl, a=1, t=1, r=1, s=1)

    if mirror:
        mirrorTransform(ctrl, axis=mirror)

def mirrorTransform(inNode, axis='x'):

        tmpGrp = mc.createNode('transform', n='tmp_scale_grp')
        mc.parent(inNode, tmpGrp)
        mc.setAttr('%s.s%s'%(tmpGrp, axis), -1)
        mc.parent(inNode, world=True)
        mc.makeIdentity (inNode, a=1, t=1, r=1, s=1)
        mc.delete(tmpGrp)